<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="8" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="USERS_API Suite" duration-ms="21961" started-at="2020-08-11T06:16:32Z" finished-at="2020-08-11T06:16:54Z">
    <groups>
    </groups>
    <test name="USERS_API_Result" duration-ms="21961" started-at="2020-08-11T06:16:32Z" finished-at="2020-08-11T06:16:54Z">
      <class name="com.NotificationDetails.TC001_Get_Notification_Users">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.NotificationDetails.TC001_Get_Notification_Users@30c15d8b]" name="setup" is-config="true" duration-ms="400" started-at="2020-08-11T11:46:32Z" finished-at="2020-08-11T11:46:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getList_Users()[pri:0, instance:com.NotificationDetails.TC001_Get_Notification_Users@30c15d8b]" name="getList_Users" duration-ms="7176" started-at="2020-08-11T11:46:33Z" finished-at="2020-08-11T11:46:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getList_Users -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.NotificationDetails.TC001_Get_Notification_Users@30c15d8b]" name="tearDown" is-config="true" duration-ms="4" started-at="2020-08-11T11:46:40Z" finished-at="2020-08-11T11:46:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getList_Users status=SUCCESS method=TC001_Get_Notification_Users.getList_Users()[pri:0, instance:com.NotificationDetails.TC001_Get_Notification_Users@30c15d8b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:com.NotificationDetails.TC001_Get_Notification_Users@30c15d8b]" name="endReport" is-config="true" duration-ms="630" started-at="2020-08-11T11:46:53Z" finished-at="2020-08-11T11:46:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:com.DriverProfile.TC001_Post_DriverRegistration@411f53a0]" name="endReport" is-config="true" duration-ms="150" started-at="2020-08-11T11:46:53Z" finished-at="2020-08-11T11:46:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:com.NotificationDetails.TC002_Post_Notification_Users@5e0e82ae]" name="endReport" is-config="true" duration-ms="220" started-at="2020-08-11T11:46:53Z" finished-at="2020-08-11T11:46:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:com.NotificationDetails.TC003_PUT_Notification_Users@6771beb3]" name="endReport" is-config="true" duration-ms="216" started-at="2020-08-11T11:46:54Z" finished-at="2020-08-11T11:46:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:com.NotificationDetails.TC004_Get_One_Notification_Details@51399530]" name="endReport" is-config="true" duration-ms="171" started-at="2020-08-11T11:46:54Z" finished-at="2020-08-11T11:46:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:com.NotificationDetails.TC005_Delete_Notification_Details@6b2ea799]" name="endReport" is-config="true" duration-ms="207" started-at="2020-08-11T11:46:54Z" finished-at="2020-08-11T11:46:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- com.NotificationDetails.TC001_Get_Notification_Users -->
      <class name="com.NotificationDetails.TC003_PUT_Notification_Users">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.NotificationDetails.TC003_PUT_Notification_Users@6771beb3]" name="setup" is-config="true" duration-ms="10" started-at="2020-08-11T11:46:40Z" finished-at="2020-08-11T11:46:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="put_New_Users()[pri:0, instance:com.NotificationDetails.TC003_PUT_Notification_Users@6771beb3]" name="put_New_Users" duration-ms="82" started-at="2020-08-11T11:46:40Z" finished-at="2020-08-11T11:46:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- put_New_Users -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.NotificationDetails.TC003_PUT_Notification_Users@6771beb3]" name="tearDown" is-config="true" duration-ms="2" started-at="2020-08-11T11:46:40Z" finished-at="2020-08-11T11:46:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=put_New_Users status=SUCCESS method=TC003_PUT_Notification_Users.put_New_Users()[pri:0, instance:com.NotificationDetails.TC003_PUT_Notification_Users@6771beb3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.NotificationDetails.TC003_PUT_Notification_Users -->
      <class name="com.NotificationDetails.TC002_Post_Notification_Users">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.NotificationDetails.TC002_Post_Notification_Users@5e0e82ae]" name="setup" is-config="true" duration-ms="5" started-at="2020-08-11T11:46:40Z" finished-at="2020-08-11T11:46:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="post_New_Users()[pri:0, instance:com.NotificationDetails.TC002_Post_Notification_Users@5e0e82ae]" name="post_New_Users" duration-ms="165" started-at="2020-08-11T11:46:40Z" finished-at="2020-08-11T11:46:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- post_New_Users -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.NotificationDetails.TC002_Post_Notification_Users@5e0e82ae]" name="tearDown" is-config="true" duration-ms="2" started-at="2020-08-11T11:46:40Z" finished-at="2020-08-11T11:46:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=post_New_Users status=SUCCESS method=TC002_Post_Notification_Users.post_New_Users()[pri:0, instance:com.NotificationDetails.TC002_Post_Notification_Users@5e0e82ae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.NotificationDetails.TC002_Post_Notification_Users -->
      <class name="com.NotificationDetails.TC004_Get_One_Notification_Details">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.NotificationDetails.TC004_Get_One_Notification_Details@51399530]" name="setup" is-config="true" duration-ms="8" started-at="2020-08-11T11:46:40Z" finished-at="2020-08-11T11:46:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="callNotificationAPI()[pri:0, instance:com.NotificationDetails.TC004_Get_One_Notification_Details@51399530]" name="callNotificationAPI" duration-ms="3065" started-at="2020-08-11T11:46:40Z" finished-at="2020-08-11T11:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callNotificationAPI -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.NotificationDetails.TC004_Get_One_Notification_Details@51399530]" name="tearDown" is-config="true" duration-ms="2" started-at="2020-08-11T11:46:43Z" finished-at="2020-08-11T11:46:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=callNotificationAPI status=SUCCESS method=TC004_Get_One_Notification_Details.callNotificationAPI()[pri:0, instance:com.NotificationDetails.TC004_Get_One_Notification_Details@51399530] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="retrieveNotificationDetails()[pri:0, instance:com.NotificationDetails.TC004_Get_One_Notification_Details@51399530]" name="retrieveNotificationDetails" duration-ms="3073" started-at="2020-08-11T11:46:43Z" finished-at="2020-08-11T11:46:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- retrieveNotificationDetails -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.NotificationDetails.TC004_Get_One_Notification_Details@51399530]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-08-11T11:46:46Z" finished-at="2020-08-11T11:46:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=retrieveNotificationDetails status=SUCCESS method=TC004_Get_One_Notification_Details.retrieveNotificationDetails()[pri:0, instance:com.NotificationDetails.TC004_Get_One_Notification_Details@51399530] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.NotificationDetails.TC004_Get_One_Notification_Details -->
      <class name="com.NotificationDetails.TC005_Delete_Notification_Details">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.NotificationDetails.TC005_Delete_Notification_Details@6b2ea799]" name="setup" is-config="true" duration-ms="7" started-at="2020-08-11T11:46:46Z" finished-at="2020-08-11T11:46:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="callNotificationAPI()[pri:0, instance:com.NotificationDetails.TC005_Delete_Notification_Details@6b2ea799]" name="callNotificationAPI" duration-ms="3058" started-at="2020-08-11T11:46:46Z" finished-at="2020-08-11T11:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callNotificationAPI -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.NotificationDetails.TC005_Delete_Notification_Details@6b2ea799]" name="tearDown" is-config="true" duration-ms="2" started-at="2020-08-11T11:46:49Z" finished-at="2020-08-11T11:46:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=callNotificationAPI status=SUCCESS method=TC005_Delete_Notification_Details.callNotificationAPI()[pri:0, instance:com.NotificationDetails.TC005_Delete_Notification_Details@6b2ea799] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="retrieveNotificationDetails()[pri:0, instance:com.NotificationDetails.TC005_Delete_Notification_Details@6b2ea799]" name="retrieveNotificationDetails" duration-ms="3096" started-at="2020-08-11T11:46:49Z" finished-at="2020-08-11T11:46:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- retrieveNotificationDetails -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.NotificationDetails.TC005_Delete_Notification_Details@6b2ea799]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-08-11T11:46:53Z" finished-at="2020-08-11T11:46:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=retrieveNotificationDetails status=SUCCESS method=TC005_Delete_Notification_Details.retrieveNotificationDetails()[pri:0, instance:com.NotificationDetails.TC005_Delete_Notification_Details@6b2ea799] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.NotificationDetails.TC005_Delete_Notification_Details -->
      <class name="com.DriverProfile.TC001_Post_DriverRegistration">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.DriverProfile.TC001_Post_DriverRegistration@411f53a0]" name="setup" is-config="true" duration-ms="6" started-at="2020-08-11T11:46:53Z" finished-at="2020-08-11T11:46:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="post_New_Users()[pri:0, instance:com.DriverProfile.TC001_Post_DriverRegistration@411f53a0]" name="post_New_Users" duration-ms="156" started-at="2020-08-11T11:46:53Z" finished-at="2020-08-11T11:46:53Z">
          <exception class="io.restassured.path.json.exception.JsonPathException">
            <message>
              <![CDATA[Failed to parse the JSON document]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.restassured.path.json.exception.JsonPathException: Failed to parse the JSON document
	at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1002)
	at io.restassured.path.json.JsonPath$4.doParseWith(JsonPath.java:967)
	at io.restassured.path.json.JsonPath$JsonParser.parseWith(JsonPath.java:1047)
	at io.restassured.path.json.JsonPath.get(JsonPath.java:202)
	at io.restassured.path.json.JsonPath.getString(JsonPath.java:352)
	at com.RestUtility.Helper.validate_Post_Json_ResponseBody(Helper.java:119)
	at com.DriverProfile.TC001_Post_DriverRegistration.post_New_Users(TC001_Post_DriverRegistration.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: groovy.json.JsonException: Lexing failed on line: 1, column: 1, while reading 'm', no possible valid JSON value or punctuation could be recognized.
	at groovy.json.JsonLexer.nextToken(JsonLexer.java:86)
	at groovy.json.JsonLexer$nextToken.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:130)
	at io.restassured.internal.path.json.ConfigurableJsonSlurper.parse(ConfigurableJsonSlurper.groovy:97)
	at io.restassured.internal.path.json.ConfigurableJsonSlurper$parse.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
	at io.restassured.internal.path.json.ConfigurableJsonSlurper.parseText(ConfigurableJsonSlurper.groovy:83)
	at io.restassured.path.json.JsonPath$4$1.method(JsonPath.java:965)
	at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1000)
	... 34 more
]]>
            </full-stacktrace>
          </exception> <!-- io.restassured.path.json.exception.JsonPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- post_New_Users -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.DriverProfile.TC001_Post_DriverRegistration@411f53a0]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-08-11T11:46:53Z" finished-at="2020-08-11T11:46:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=post_New_Users status=FAILURE method=TC001_Post_DriverRegistration.post_New_Users()[pri:0, instance:com.DriverProfile.TC001_Post_DriverRegistration@411f53a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.DriverProfile.TC001_Post_DriverRegistration -->
    </test> <!-- USERS_API_Result -->
  </suite> <!-- USERS_API Suite -->
</testng-results>
